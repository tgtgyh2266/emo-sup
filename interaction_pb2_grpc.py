# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import interaction_pb2 as interaction__pb2


class InteractStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self._RobotConnect = channel.unary_unary(
                '/interaction.Interact/_RobotConnect',
                request_serializer=interaction__pb2.RobotConnectRequest.SerializeToString,
                response_deserializer=interaction__pb2.RobotConnectReply.FromString,
                )
        self.TabletConnect = channel.unary_unary(
                '/interaction.Interact/TabletConnect',
                request_serializer=interaction__pb2.TabletConnectRequest.SerializeToString,
                response_deserializer=interaction__pb2.TabletConnectReply.FromString,
                )
        self._RobotSend = channel.unary_unary(
                '/interaction.Interact/_RobotSend',
                request_serializer=interaction__pb2.RobotInput.SerializeToString,
                response_deserializer=interaction__pb2.RobotOutput.FromString,
                )
        self.TabletSend = channel.unary_unary(
                '/interaction.Interact/TabletSend',
                request_serializer=interaction__pb2.TabletInput.SerializeToString,
                response_deserializer=interaction__pb2.TabletOutput.FromString,
                )


class InteractServicer(object):
    """Missing associated documentation comment in .proto file."""

    def _RobotConnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TabletConnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def _RobotSend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TabletSend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InteractServicer_to_server(servicer, server):
    rpc_method_handlers = {
            '_RobotConnect': grpc.unary_unary_rpc_method_handler(
                    servicer._RobotConnect,
                    request_deserializer=interaction__pb2.RobotConnectRequest.FromString,
                    response_serializer=interaction__pb2.RobotConnectReply.SerializeToString,
            ),
            'TabletConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.TabletConnect,
                    request_deserializer=interaction__pb2.TabletConnectRequest.FromString,
                    response_serializer=interaction__pb2.TabletConnectReply.SerializeToString,
            ),
            '_RobotSend': grpc.unary_unary_rpc_method_handler(
                    servicer._RobotSend,
                    request_deserializer=interaction__pb2.RobotInput.FromString,
                    response_serializer=interaction__pb2.RobotOutput.SerializeToString,
            ),
            'TabletSend': grpc.unary_unary_rpc_method_handler(
                    servicer.TabletSend,
                    request_deserializer=interaction__pb2.TabletInput.FromString,
                    response_serializer=interaction__pb2.TabletOutput.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'interaction.Interact', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Interact(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def _RobotConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/interaction.Interact/_RobotConnect',
            interaction__pb2.RobotConnectRequest.SerializeToString,
            interaction__pb2.RobotConnectReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TabletConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/interaction.Interact/TabletConnect',
            interaction__pb2.TabletConnectRequest.SerializeToString,
            interaction__pb2.TabletConnectReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def _RobotSend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/interaction.Interact/_RobotSend',
            interaction__pb2.RobotInput.SerializeToString,
            interaction__pb2.RobotOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TabletSend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/interaction.Interact/TabletSend',
            interaction__pb2.TabletInput.SerializeToString,
            interaction__pb2.TabletOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
